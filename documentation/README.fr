1. INTRODUCTION

Wine est un programme qui permet d'exécuter les logiciels écrits
pour Microsoft Windows (comprenant les exécutables DOS, Windows 3.x
et Win32) sur un Unix. Il est composé d'un chargeur qui charge et
exécute un binaire Microsoft Windows, ainsi que d'une bibliothèque (appelée
Winelib) qui implémente les appels de l'API de Windows par leur
équivalent Unix ou X11. Cette bibliothèque peut également être utilisée
pour porter du code Win32 vers un exécutable Unix natif.

Wine est un logiciel libre, distribué sous GNU LGPL; lisez le fichier
LICENSE pour les détails.

2. DÉMARRAGE RAPIDE

Quand vous compilez à partir des sources, il est recommandé d'utiliser
l'Installateur de Wine pour construire et installer Wine. À partir du
répertoire racine des sources de Wine (qui contient ce fichier),
exécutez :

./tools/wineinstall

Pour exécuter un programme, tapez "wine [options] programme". Pour des
informations complémentaires et des résolutions de problèmes, lisez le
reste de ce fichier, les pages "man" de Wine, et surtout les nombreuses 
informations que vous trouverez sur http://www.winehq.org.

3. CONFIGURATION NÉCESSAIRE

Pour compiler et exécuter Wine, vous devez avoir un des systèmes
d'exploitation qui suit :

	Linux version 2.0.36 ou ultérieur
	FreeBSD 6.3 ou ultérieur
	Solaris x86 9 ou ultérieur
	NetBSD-current
	Mac OS X 10.4 ou ultérieur

Étant donné que Wine nécessite une implémentation des "threads" (processus
légers) au niveau du noyau, seuls les systèmes d'exploitation mentionnés
ci-haut sont supportés. D'autres systèmes d'exploitation implémentant les
threads noyau peuvent être pris en charge dans le futur.

Information Linux :
  Bien que Linux 2.2.x devrait encore fonctionner et que Linux 2.0.x pourrait
  encore marcher (des versions plus anciennes de 2.0.x avaient des plantages
  dus aux threads), il est préférable d'avoir un noyau récent tel que 2.4.x
  ou 2.6.x.

Information FreeBSD :
  Wine ne fonctionnera généralement pas bien pour les versions FreeBSD
  antérieures à 6.3 ou 7.0 (certains patches additionnels sont disponibles pour
  FreeBSD 6.3). Voyez <http://wiki.freebsd.org/Wine> pour plus d'informations.

Information Solaris :
  Il est plus que probable que vous devrez construire Wine avec la chaîne
  d'outils GNU (gcc, gas, etc.). Attention : installer gas n'assure pas
  qu'il sera utilisé par gcc.  Recompiler gcc après l'installation de gas
  ou créer un lien symbolique de cc, as et ld vers les outils GNU semble
  nécessaire.

Information NetBSD :
  Assurez-vous d'avoir les options USER_LDT, SYSVSHM, SYSVSEM et SYSVMSG
  activées dans votre noyau.

Information Mac OS X :
  Xcode 2.4 ou ultérieur est nécessaire pour compiler Wine sous x86.


Systèmes de fichiers pris en charge :
  Wine devrait fonctionner sur la plupart des systèmes de fichiers. Certains
  problèmes de compatibilité ont été rapportés lors de l'utilisation de fichiers
  accédés via Samba. De plus, NTFS ne fournit pas toutes les fonctionnalités de
  système de fichiers nécessaires pour certains applications. L'utilisation d'un
  système de fichiers Linux natif comme ext3 est recommandée.

Configuration requise de base :
  Les fichiers "include" de X11 (appelés xlib6g-dev sous Debian et XFree86-devel
  sous RedHat) doivent être installés.

  Bien entendu, vous aurez besoin du programme "make" (très probablement GNU
  make).

  Flex 2.5 ou ultérieur, ainsi que bison, sont également requis.

Bibliothèques optionnelles :
  "Configure" affichera des messages quand des bibliothèques optionnelles ne
  sont pas détectées sur votre système. Consultez
  http://wiki.winehq.org/Recommended_Packages (en anglais) pour des indications
  sur les paquets logiciels que vous devriez installer.

  Sur les plates-formes 64 bits, vous devez installer les versions 32 bits de
  ces bibliothèques. Voyez http://wiki.winehq.org/WineOn64bit (en anglais) pour
  les détails.

4. COMPILATION

Au cas où vous choisiriez de ne pas utiliser wineinstall, exécutez les commandes
suivantes pour construire Wine :

./configure
make depend
make

Cela va construire le programme "wine" et de nombreux binaires/bibliothèques de
support.
Le programme "wine" chargera et exécutera les exécutables Windows.
La bibliothèque "libwine" ("Winelib") peut être utilisée pour compiler et lier
du code source Windows sous Unix.

Pour voir les options de compilation, tapez ./configure --help.

Pour mettre à jour vers une nouvelle version en utilisant les fichiers de mise à
niveau, tout d'abord aller dans le répertoire de plus haut niveau de la version
actuelle (celui qui contient ce fichier README.fr). Ensuite faire un "make
clean", et mettre à jour la version avec :

    bunzip2 -c fichier-patch | patch -p1

où "fichier-patch" est le nom du fichier de mise à niveau (quelque chose du
genre wine-1.0.x.diff.bz2). Vous pouvez ensuite réexécuter "./configure", et
taper ensuite "make depend && make".

5. INSTALLATION

Une fois Wine a été construit correctement, vous pouvez tapez "make install" :
cela installera l'exécutable wine, les pages man Wine et quelques autres
fichiers nécessaires.

N'oubliez pas de désinstaller toutes les installations précédentes de wine.
Essayez soit "dpkg -r wine", "rpm -e wine" ou "make uninstall" avant
d'installer une nouvelle version.

Une fois l'installation terminée, vous pouvez naviguer dans la section Support à
http://www.winehq.org/ pour obtenir des astuces de configuration.


6. EXÉCUTER DES PROGRAMMES

Lorsque l'on invoque Wine, vous pouvez spécifier le chemin entier vers
l'exécutable ou seulement le nom de fichier.

Pour exécuter le bloc-notes par exemple :

	wine notepad		       (en utilisant le chemin d'accès spécifié
	wine notepad.exe	        dans le fichier "config" pour localiser
				        le fichier)

	wine c:\\windows\\notepad.exe  (en utilisant la syntaxe de fichiers DOS)

	wine ~/.wine/drive_c/windows/notepad.exe  (en utilisant la syntaxe Unix)

	wine notepad.exe /paramètre1 -paramètre2 paramètre3
			(en appelant le programme avec des paramètres)

Wine n'est pas encore terminé ; ainsi quelques programmes peuvent planter. Quand
cela se produit, un débogueur est démarré à l'endroit du plantage pour que vous
puissiez essayer de résoudre le problème.  Pour plus d'informations sur la
manière de faire, veuillez lire la section "déboguage" du Guide du développeur
Wine (Wine Developer's Guide).


7. INFORMATIONS COMPLÉMENTAIRES

WWW	Beaucoup d'informations à propos de Wine sont disponibles sur WineHQ à
	http://www.winehq.org/ : divers guides Wine, base de données
	d'applications, suivi de bogues. C'est probablement le meilleur point
	de départ.

FAQ	La Foire Aux Questions de Wine se trouve sur http://www.winehq.org/FAQ

Usenet	Vous pouvez parler des problèmes en relation avec Wine
	ou obtenir de l'aide sur comp.emulators.ms-windows.wine.

Bogues	Rapportez les bogues à Wine Bugzilla à http://bugs.winehq.org
	SVP cherchez tout d'abord dans la base de données de bugzilla
	pour contrôler que le problème n'est pas déjà découvert avant
	de soumettre un rapport de bogue. Vous pouvez également rapporter
	des rapports de bogue à comp.emulators.ms-windows.wine.
	SVP lisez le fichier documentation/bugs.sgml pour connaître les
	informations nécessaires.

IRC	L'aide en ligne est disponible sur le canal #WineHQ sur
	irc.freenode.net.

GIT	L'arbre de développement actuel de Wine est disponible au travers de
	GIT. Voyez http://www.winehq.org/site/git pour plus d'informations.

Listes de diffusion
	Il existe de multiples listes de diffusion pour les développeurs Wine ;
	voyez http://www.winehq.org/forums pour de plus amples informations.

Wiki	Le wiki Wine est situé sur http://wiki.winehq.org


Si vous ajoutez quelque chose ou corrigez un bogue, envoyez un correctif (dans le
format 'diff -u' ) à la liste de diffusion wine-patches@winehq.org pour qu'il
soit inclus dans la prochaine version.

--
Alexandre Julliard
julliard@winehq.org

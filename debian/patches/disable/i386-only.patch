description: disable i386 specific routines on non i386 archs
author: Michael Gilbert <mgilbert@debian.org>

--- a/dlls/oleaut32/tmarshal.c
+++ b/dlls/oleaut32/tmarshal.c
@@ -48,10 +48,15 @@
 #include "wine/debug.h"
 #include "wine/exception.h"
 
+#ifdef __i386__
 static const WCHAR IDispatchW[] = { 'I','D','i','s','p','a','t','c','h',0};
+#endif
 
 WINE_DEFAULT_DEBUG_CHANNEL(ole);
+
+#ifdef __i386__
 WINE_DECLARE_DEBUG_CHANNEL(olerelay);
+#endif
 
 static HRESULT TMarshalDispatchChannel_Create(
     IRpcChannelBuffer *pDelegateChannel, REFIID tmarshal_riid,
@@ -63,6 +68,7 @@ typedef struct _marshal_state {
     int		curoff;
 } marshal_state;
 
+#ifdef __i386__
 /* used in the olerelay code to avoid having the L"" stuff added by debugstr_w */
 static char *relaystr(WCHAR *in) {
     char *tmp = (char *)debugstr_w(in);
@@ -249,6 +255,7 @@ fail:
     HeapFree(GetProcessHeap(), 0, tempbuf);
     return hres;
 }
+#endif
 
 /********************* OLE Proxy/Stub Factory ********************************/
 static HRESULT WINAPI
@@ -508,7 +515,7 @@ typedef struct _TMAsmProxy {
 #include "poppack.h"
 
 #else /* __i386__ */
-# warning You need to implement stubless proxies for your architecture
+#pragma message "You need to implement stubless proxies for your architecture"
 typedef struct _TMAsmProxy {
 } TMAsmProxy;
 #endif
@@ -673,6 +680,7 @@ _argsize(TYPEDESC *tdesc, ITypeInfo *tin
     }
 }
 
+#ifdef __i386__
 /* how much space do we use on the heap (in bytes) */
 static int
 _xsize(const TYPEDESC *td, ITypeInfo *tinfo) {
@@ -1306,6 +1314,7 @@ deserialize_param(
 	}
     }
 }
+#endif
 
 /* Retrieves a function's funcdesc, searching back into inherited interfaces. */
 static HRESULT get_funcdesc(ITypeInfo *tinfo, int iMethod, ITypeInfo **tactual, const FUNCDESC **fdesc,
@@ -1412,6 +1421,7 @@ static inline BOOL is_out_elem(const ELE
     return (elem->u.paramdesc.wParamFlags & PARAMFLAG_FOUT || !elem->u.paramdesc.wParamFlags);
 }
 
+#ifdef __i386__
 static DWORD WINAPI xCall(int method, void **args)
 {
     TMProxyImpl *tpinfo = args[0];
@@ -1590,6 +1600,7 @@ exit:
     TRACE("-- 0x%08x\n", hres);
     return hres;
 }
+#endif
 
 static HRESULT WINAPI ProxyIUnknown_QueryInterface(IUnknown *iface, REFIID riid, void **ppv)
 {
@@ -1803,7 +1814,9 @@ static HRESULT init_proxy_entry_point(TM
     /* nrofargs including This */
     int nrofargs = 1;
     ITypeInfo *tinfo2;
+#ifdef __i386__
     TMAsmProxy	*xasm = proxy->asmstubs + num;
+#endif
     HRESULT hres;
     const FUNCDESC *fdesc;
 

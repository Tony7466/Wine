description: use system unicode
author: Michael Gilbert <mgilbert@debian.org>

--- a/tools/make_unicode
+++ b/tools/make_unicode
@@ -23,22 +23,23 @@ use strict;
 use XML::LibXML;
 use Encode;
 
-# base URLs for www.unicode.org files
-my $UNIVERSION = "14.0.0";
-my $UNIDATA  = "https://www.unicode.org/Public/$UNIVERSION/ucd/UCD.zip";
-my $UNIHAN   = "https://www.unicode.org/Public/$UNIVERSION/ucd/Unihan.zip";
-my $IDNADATA = "https://www.unicode.org/Public/idna/$UNIVERSION";
-my $JISDATA  = "https://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/JIS";
-my $KSCDATA  = "https://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/KSC";
-my $MSDATA = "https://download.microsoft.com/download/C/F/7/CF713A5E-9FBC-4FD6-9246-275F65C0E498";
+# Locations of unicode files
+my $UNIVERSION = `dpkg-parsechangelog --file /usr/share/doc/unicode-data/changelog.Debian.gz --show-field Version | sed s/-.*//`;
+chomp($UNIVERSION);
+my $UNIDATA = "/usr/share/unicode";
+my $UNIHAN = "/usr/share/unicode";
+my $IDNADATA = "debian/unicode/tr46/$UNIVERSION";
+my $JISDATA = "debian/unicode/mappings/OBSOLETE/EASTASIA/JIS";
+my $KSCDATA = "debian/unicode/mappings/OBSOLETE/EASTASIA/KSC";
+my $MSDATA = "debian/unicode";
 my $MSCODEPAGES = "$MSDATA/Windows Supported Code Page Data Files.zip";
 
 my $CLDRVERSION = "41";
-my $CLDRDATA = "https://github.com/unicode-org/cldr/archive/refs/tags/release-$CLDRVERSION.zip";
-my $CLDR33DATA = "https://www.unicode.org/Public/cldr/33/cldr-common-33.0.zip";
+my $CLDRDATA = "/usr/share/unicode";
+my $CLDR33DATA = "debian/unicode/cldr33";
 
 my $ISO639VERSION = "20220120";
-my $ISO639 =  "https://iso639-3.sil.org/sites/iso639-3/files/downloads/iso-639-3_Code_Tables_$ISO639VERSION.zip";
+my $ISO639 =  "debian/unicode/iso639";
 
 # Default char for undefined mappings
 my $DEF_CHAR = ord '?';
@@ -1878,25 +1879,11 @@ sub open_data_file($$)
 
     if ($base =~ /.*\/([^\/]+)\.zip$/)
     {
-        my $zip = "$1$suffix.zip";
-        unless (-f "$cache/$zip")
-        {
-            system "mkdir", "-p", $cache;
-            print "Fetching $base...\n";
-            !system "wget", "-q", "-O", "$cache/$zip", $base or die "cannot fetch $base";
-        }
-        open FILE, "-|", "unzip", "-p", "$cache/$zip", $name or die "cannot extract $name from $zip";
+        open FILE, "-|", "unzip", "-p", "$base", $name or die "cannot extract $name from $base";
     }
     else
     {
-        (my $dest = "$cache/$name") =~ s/(.*)(\.[^\/.]+)$/$1$suffix$2/;
-        unless (-f $dest)
-        {
-            system "mkdir", "-p", $dir;
-            print "Fetching $base/$name...\n";
-            !system "wget", "-q", "-O", $dest, "$base/$name" or die "cannot fetch $base/$name";
-        }
-        open FILE, "<$dest" or die "cannot open $dest";
+        open FILE, "<$base/$name" or die "cannot open $base/$name";
     }
     return *FILE;
 }
@@ -2240,7 +2227,7 @@ sub load_data()
 
     # load the Unihan mappings
 
-    my $UNIHAN = open_data_file( $UNIHAN, "Unihan_Variants.txt" );
+    my $UNIHAN = open_data_file( $UNIHAN, "Unihan_Variants.txt.bz2" );
     while (<$UNIHAN>)
     {
         s/\#.*//;  # remove comments
@@ -4359,7 +4346,7 @@ sub load_iso639()
 # build the locale table for locale.nls
 sub build_locale_data()
 {
-    my $base = "cldr-release-$CLDRVERSION";
+    my $base = "cldr";
     my $suppl = load_xml_data_file( $CLDRDATA, "$base/common/supplemental/supplementalData.xml" );
     my $subtags = load_xml_data_file( $CLDRDATA, "$base/common/supplemental/likelySubtags.xml" );
     my $numbers = load_xml_data_file( $CLDRDATA, "$base/common/supplemental/numberingSystems.xml" );
@@ -4399,6 +4386,9 @@ sub build_locale_data()
         next if defined $loc->{alias};
         (my $file = $loc->{file} || $loc->{name}) =~ s/-/_/g;
         $file = "$base/" . ($loc->{dir} || "common") . "/main/$file.xml";
+
+        if (-e "$CLDRDATA/$file")
+        {
         my $xml = load_xml_data_file( $CLDRDATA, $file );
         $loc->{xml} = $xml;
         $loc->{language} ||= xml_query( $xml, "/ldml/identity/language/\@type" );
@@ -4406,12 +4396,14 @@ sub build_locale_data()
         $loc->{script} = xml_query( $xml, "/ldml/identity/script/\@type" );
         if (!defined($loc->{territory}) && $loc->{name} =~ /-([A-Z]{2}|[0-9]{3})$/) { $loc->{territory} = $1; }
         if (!defined($loc->{script}) && $loc->{name} =~ /-([A-Z][a-z]{3})(-[A-Z]{2})?$/) { $loc->{script} = $1; }
+        }
     }
 
     # assign a default territory and sort locale
 
     foreach my $loc (@locales)
     {
+        next unless defined $loc->{xml};
         next if defined $loc->{alias};
         next if defined $loc->{territory};
         my $id = $loc->{sortlocale};
@@ -4457,6 +4449,7 @@ sub build_locale_data()
     }
     foreach my $loc (@locales)
     {
+        next unless defined $loc->{xml};
         next if defined $loc->{alias};
         my $territory = $loc->{territory};
         $geotable{$territory} ||= { name => $territory };
@@ -4584,6 +4577,7 @@ sub build_locale_data()
     my $default_lcid = 0x8001;
     foreach my $loc (@locales)
     {
+        next unless defined $loc->{xml};
         next if defined $loc->{alias};
         my $sname = $loc->{name};
         my $language = $loc->{language};
@@ -4959,6 +4953,7 @@ sub build_locale_data()
     add_registry_key( "Locale", "00000409" );
     foreach my $loc (@locales)
     {
+        next unless defined $loc->{xml};
         next unless defined $loc->{lcid};
         next if ($loc->{lcid} & 0x80000000);
         next if !defined($loc->{alias}) && $loc->{name} !~ /-$loc->{territory}/; # skip neutral locales

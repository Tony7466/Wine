description: revert upstream msvcrt commit 8631960745396109ec450eafb9fe76684388f84a

--- a/dlls/opcservices/Makefile.in
+++ b/dlls/opcservices/Makefile.in
@@ -1,8 +1,6 @@
 MODULE  = opcservices.dll
 IMPORTS = uuid ole32 advapi32 urlmon xmllite oleaut32
 
-EXTRADLLFLAGS = -mno-cygwin
-
 C_SRCS = \
 	compress.c \
 	deflate.c \
--- a/dlls/opcservices/compress.c
+++ b/dlls/opcservices/compress.c
@@ -18,6 +18,8 @@
 
 #define COBJMACROS
 
+#include "config.h"
+
 #include <stdarg.h>
 
 #include "windef.h"
--- a/dlls/opcservices/package.c
+++ b/dlls/opcservices/package.c
@@ -26,6 +26,7 @@
 
 #include "wine/debug.h"
 #include "wine/list.h"
+#include "wine/unicode.h"
 
 #include "opc_private.h"
 
@@ -731,7 +732,7 @@ static WCHAR *opc_strdupW(const WCHAR *s
     {
         size_t size;
 
-        size = (lstrlenW(str) + 1) * sizeof(WCHAR);
+        size = (strlenW(str) + 1) * sizeof(WCHAR);
         ret = CoTaskMemAlloc(size);
         if (ret)
             memcpy(ret, str, size);
@@ -1168,7 +1169,7 @@ static struct opc_relationship *opc_rela
 
     for (i = 0; i < relationship_set->count; i++)
     {
-        if (!wcscmp(id, relationship_set->relationships[i]->id))
+        if (!strcmpW(id, relationship_set->relationships[i]->id))
             return relationship_set->relationships[i];
     }
 
@@ -1206,7 +1207,7 @@ static HRESULT opc_relationship_create(s
 
             /* FIXME: test that generated id is unique */
             RtlGenRandom(&generated, sizeof(generated));
-            swprintf(relationship->id, 10, fmtW, generated);
+            sprintfW(relationship->id, fmtW, generated);
 
             if (opc_relationshipset_get_rel(set, relationship->id))
             {
@@ -1634,11 +1635,11 @@ static HRESULT opc_package_add_content_t
         if (cur->element == CONTENT_TYPE_OVERRIDE)
             continue;
 
-        if (!wcsicmp(cur->u.def.ext, ext))
+        if (!strcmpiW(cur->u.def.ext, ext))
         {
             added = TRUE;
 
-            if (!wcscmp(cur->u.def.type, content_type))
+            if (!strcmpW(cur->u.def.type, content_type))
                 break;
 
             hr = opc_package_add_override_content_type(types, part);
--- a/dlls/opcservices/uri.c
+++ b/dlls/opcservices/uri.c
@@ -23,6 +23,7 @@
 #include "winbase.h"
 
 #include "wine/debug.h"
+#include "wine/unicode.h"
 
 #include "opc_private.h"
 
@@ -466,7 +467,7 @@ static IUri *opc_part_uri_get_rels_uri(I
         return NULL;
     }
 
-    end = wcsrchr(path, '/');
+    end = strrchrW(path, '/');
     if (end && end >= path + ARRAY_SIZE(relsdirW) - 1)
         start = end - ARRAY_SIZE(relsdirW) + 1;
     if (!start)
@@ -475,7 +476,7 @@ static IUri *opc_part_uri_get_rels_uri(I
     /* Test if it's already relationships uri. */
     if (len > ARRAY_SIZE(relsextW))
     {
-        if (!wcscmp(path + len - ARRAY_SIZE(relsextW) + 1, relsextW))
+        if (!strcmpW(path + len - ARRAY_SIZE(relsextW) + 1, relsextW))
         {
             if (start && !memcmp(start, relsdirW, ARRAY_SIZE(relsdirW) - sizeof(WCHAR)))
             {
@@ -499,9 +500,9 @@ static IUri *opc_part_uri_get_rels_uri(I
         ret[start - path] = 0;
     }
 
-    lstrcatW(ret, relsdirW);
-    lstrcatW(ret, end);
-    lstrcatW(ret, relsextW);
+    strcatW(ret, relsdirW);
+    strcatW(ret, end);
+    strcatW(ret, relsextW);
 
     if (FAILED(hr = CreateUri(ret, Uri_CREATE_ALLOW_RELATIVE, 0, &rels_uri)))
         WARN("Failed to create rels uri, hr %#x.\n", hr);

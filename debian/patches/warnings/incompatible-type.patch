description: fix incompatible type warning, function pointers are not const
author: Michael Gilbert <mgilbert@debian.org>

--- a/dlls/oleaut32/typelib.c
+++ b/dlls/oleaut32/typelib.c
@@ -6343,7 +6343,7 @@ __ASM_GLOBAL_FUNC( call_method,
                    "ret" )
 
 /* same function but returning floating point */
-static double (* const call_double_method)(void*,int,const DWORD*,int*) = (void *)call_method;
+static double (* call_double_method)(void*,int,const DWORD*,int*) = (void *)call_method;
 
 /* ITypeInfo::Invoke
  *
@@ -6421,7 +6421,7 @@ __ASM_GLOBAL_FUNC( call_method,
                    "ret")
 
 /* same function but returning floating point */
-static double (CDECL * const call_double_method)(void*,int,const DWORD_PTR*) = (void *)call_method;
+static double (CDECL * call_double_method)(void*,int,const DWORD_PTR*) = (void *)call_method;
 
 #elif defined(__arm__)
 
@@ -6458,8 +6458,8 @@ __ASM_GLOBAL_FUNC( call_method,
                 )
 
 /* same function but returning single/double floating point */
-static float (CDECL * const call_float_method)(void *, int, const DWORD *, const DWORD *) = (void *)call_method;
-static double (CDECL * const call_double_method)(void *, int, const DWORD *, const DWORD *) = (void *)call_method;
+static float (CDECL * call_float_method)(void *, int, const DWORD *, const DWORD *) = (void *)call_method;
+static double (CDECL * call_double_method)(void *, int, const DWORD *, const DWORD *) = (void *)call_method;
 
 #endif  /* __x86_64__ */
 

description: sizeof(long double)=8 on arm architectures
author: Michael Gilbert <mgilbert@debian.org>

--- a/dlls/msvcrt/string.c
+++ b/dlls/msvcrt/string.c
@@ -1101,7 +1101,13 @@ int CDECL MSVCRT__atoldbl(MSVCRT__LDOUBL
   long double ld;
   TRACE("str %s value %p\n",str,value);
   ld = strtold(str,0);
+
+#ifdef __arm__
+  memcpy(value, &ld, 8);
+#else
   memcpy(value, &ld, 10);
+#endif
+
 #else
   FIXME("stub, str %s value %p\n",str,value);
 #endif
@@ -1117,7 +1123,13 @@ int CDECL __STRINGTOLD( MSVCRT__LDOUBLE
     long double ld;
     FIXME("%p %p %s %x partial stub\n", value, endptr, str, flags );
     ld = strtold(str,0);
+
+#ifdef __arm__
+    memcpy(value, &ld, 8);
+#else
     memcpy(value, &ld, 10);
+#endif
+
 #else
     FIXME("%p %p %s %x stub\n", value, endptr, str, flags );
 #endif
@@ -2025,7 +2037,12 @@ int CDECL MSVCRT_I10_OUTPUT(MSVCRT__LDOU
     char buf[I10_OUTPUT_MAX_PREC+9]; /* 9 = strlen("0.e+0000") + '\0' */
     char *p;
 
+#ifdef __arm__
+    memcpy(&ld, &ld80, 8);
+#else
     memcpy(&ld, &ld80, 10);
+#endif
+
     d = ld;
     TRACE("(%lf %d %x %p)\n", d, prec, flag, data);
 

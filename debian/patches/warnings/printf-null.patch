description: avoid passing null as an argument to printf
author: Michael Gilbert <mgilbert@debian.org>

--- a/libs/wpp/ppl.l
+++ b/libs/wpp/ppl.l
@@ -1620,8 +1620,8 @@ void pp_do_include(char *fname, int type
 	pp_incl_state.ppp = NULL;
 
 	if(pp_status.debug)
-		fprintf(stderr, "pp_do_include: %s:%d: include_state=%d, include_ppp='%s', include_ifdepth=%d\n",
-                        pp_status.input, pp_status.line_number, pp_incl_state.state, pp_incl_state.ppp, pp_incl_state.ifdepth);
+		fprintf(stderr, "pp_do_include: %s:%d: include_state=%d, include_ifdepth=%d\n",
+                        pp_status.input, pp_status.line_number, pp_incl_state.state, pp_incl_state.ifdepth);
 	pp_status.file = fp;
 	ppy__switch_to_buffer(ppy__create_buffer(NULL, YY_BUF_SIZE));
 
--- a/dlls/twain_32/dsm_ctrl.c
+++ b/dlls/twain_32/dsm_ctrl.c
@@ -284,7 +284,6 @@ TW_UINT16 TWAIN_OpenDS (pTW_IDENTITY pOr
 	TW_UINT16 i = 0;
 	pTW_IDENTITY pIdentity = (pTW_IDENTITY) pData;
 	activeDS *newSource;
-	const char *modname = NULL;
 	HMODULE hmod;
 
 	TRACE("DG_CONTROL/DAT_IDENTITY/MSG_OPENDS\n");
@@ -319,7 +318,7 @@ TW_UINT16 TWAIN_OpenDS (pTW_IDENTITY pOr
 	}
 	hmod = LoadLibraryA(devices[i].modname);
 	if (!hmod) {
-		ERR("Failed to load TWAIN Source %s\n", modname);
+		ERR("Failed to load TWAIN Source %s\n", devices[i].modname);
 		DSM_twCC = TWCC_OPERATIONERROR;
                 HeapFree(GetProcessHeap(), 0, newSource);
 		return TWRC_FAILURE;

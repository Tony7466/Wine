description: fix operations that potentially overflow (gcc -Wstringop-overflow)
author: Michael Gilbert <mgilbert@debian.org>

--- a/dlls/user32/winproc.c
+++ b/dlls/user32/winproc.c
@@ -831,7 +831,7 @@ static BOOL unpack_message( HWND hwnd, U
             if (!check_string( str, size )) return FALSE;
             cs.lpszClass = str;
         }
-        memcpy( &ps->cs, &cs, sizeof(cs) );
+        memcpy( ps, &cs, sizeof(cs) );
         break;
     }
     case WM_GETTEXT:
@@ -865,7 +865,7 @@ static BOOL unpack_message( HWND hwnd, U
         dis.hDC        = unpack_handle( ps->dis.hDC );
         dis.rcItem     = ps->dis.rcItem;
         dis.itemData   = (ULONG_PTR)unpack_ptr( ps->dis.itemData );
-        memcpy( &ps->dis, &dis, sizeof(dis) );
+        memcpy( ps, &dis, sizeof(dis) );
         break;
     }
     case WM_MEASUREITEM:
@@ -878,7 +878,7 @@ static BOOL unpack_message( HWND hwnd, U
         mis.itemWidth  = ps->mis.itemWidth;
         mis.itemHeight = ps->mis.itemHeight;
         mis.itemData   = (ULONG_PTR)unpack_ptr( ps->mis.itemData );
-        memcpy( &ps->mis, &mis, sizeof(mis) );
+        memcpy( ps, &mis, sizeof(mis) );
         break;
     }
     case WM_DELETEITEM:
@@ -890,7 +890,7 @@ static BOOL unpack_message( HWND hwnd, U
         dls.itemID     = ps->dls.itemID;
         dls.hwndItem   = unpack_handle( ps->dls.hwndItem );
         dls.itemData   = (ULONG_PTR)unpack_ptr( ps->dls.itemData );
-        memcpy( &ps->dls, &dls, sizeof(dls) );
+        memcpy( ps, &dls, sizeof(dls) );
         break;
     }
     case WM_COMPAREITEM:
@@ -905,7 +905,7 @@ static BOOL unpack_message( HWND hwnd, U
         cis.itemID2    = ps->cis.itemID2;
         cis.itemData2  = (ULONG_PTR)unpack_ptr( ps->cis.itemData2 );
         cis.dwLocaleId = ps->cis.dwLocaleId;
-        memcpy( &ps->cis, &cis, sizeof(cis) );
+        memcpy( ps, &cis, sizeof(cis) );
         break;
     }
     case WM_WINDOWPOSCHANGING:
@@ -920,7 +920,7 @@ static BOOL unpack_message( HWND hwnd, U
         wp.cx              = ps->wp.cx;
         wp.cy              = ps->wp.cy;
         wp.flags           = ps->wp.flags;
-        memcpy( &ps->wp, &wp, sizeof(wp) );
+        memcpy( ps, &wp, sizeof(wp) );
         break;
     }
     case WM_COPYDATA:
@@ -939,7 +939,7 @@ static BOOL unpack_message( HWND hwnd, U
             cds.cbData = 0;
             cds.lpData = 0;
         }
-        memcpy( &ps->cds, &cds, sizeof(cds) );
+        memcpy( ps, &cds, sizeof(cds) );
         break;
     }
     case WM_NOTIFY:
@@ -955,7 +955,7 @@ static BOOL unpack_message( HWND hwnd, U
         hi.hItemHandle  = unpack_handle( ps->hi.hItemHandle );
         hi.dwContextId  = (ULONG_PTR)unpack_ptr( ps->hi.dwContextId );
         hi.MousePos     = ps->hi.MousePos;
-        memcpy( &ps->hi, &hi, sizeof(hi) );
+        memcpy( ps, &hi, sizeof(hi) );
         break;
     }
     case WM_STYLECHANGING:
@@ -980,7 +980,7 @@ static BOOL unpack_message( HWND hwnd, U
             wp.cy              = ps->ncp.cy;
             wp.flags           = ps->ncp.flags;
             ncp.lppos = (WINDOWPOS *)((NCCALCSIZE_PARAMS *)&ps->ncp + 1);
-            memcpy( &ps->ncp, &ncp, sizeof(ncp) );
+            memcpy( ps, &ncp, sizeof(ncp) );
             *ncp.lppos = wp;
         }
         break;
@@ -995,7 +995,7 @@ static BOOL unpack_message( HWND hwnd, U
             msg.lParam  = (ULONG_PTR)unpack_ptr( ps->msg.lParam );
             msg.time    = ps->msg.time;
             msg.pt      = ps->msg.pt;
-            memcpy( &ps->msg, &msg, sizeof(msg) );
+            memcpy( ps, &msg, sizeof(msg) );
             break;
         }
         return TRUE;
@@ -1080,7 +1080,7 @@ static BOOL unpack_message( HWND hwnd, U
         mnm.hmenuIn   = unpack_handle( ps->mnm.hmenuIn );
         mnm.hmenuNext = unpack_handle( ps->mnm.hmenuNext );
         mnm.hwndNext  = unpack_handle( ps->mnm.hwndNext );
-        memcpy( &ps->mnm, &mnm, sizeof(mnm) );
+        memcpy( ps, &mnm, sizeof(mnm) );
         break;
     }
     case WM_SIZING:
@@ -1116,7 +1116,7 @@ static BOOL unpack_message( HWND hwnd, U
             if (!check_string( str, size )) return FALSE;
             mcs.szTitle = str;
         }
-        memcpy( &ps->mcs, &mcs, sizeof(mcs) );
+        memcpy( ps, &mcs, sizeof(mcs) );
         break;
     }
     case WM_MDIGETACTIVE:

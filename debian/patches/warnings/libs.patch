description: fix warnings in embedded libs
author: Michael Gilbert <mgilbert@debian.org>

--- a/libs/xml2/Makefile.in
+++ b/libs/xml2/Makefile.in
@@ -1,6 +1,6 @@
 EXTLIB    = libxml2.a
 EXTRAINCL = $(XML2_PE_CFLAGS)
-EXTRADEFS = -DHAVE_VA_COPY
+EXTRADEFS = -DHAVE_VA_COPY -Wno-format-extra-args
 
 C_SRCS = \
 	HTMLparser.c \
--- a/libs/faudio/src/FAudio_internal.h
+++ b/libs/faudio/src/FAudio_internal.h
@@ -82,8 +82,8 @@
 #define FAudio_snprintf snprintf
 #define FAudio_vsnprintf vsnprintf
 #define FAudio_getenv getenv
-#define FAudio_PRIu64 PRIu64
-#define FAudio_PRIx64 PRIx64
+#define FAudio_PRIu64 "I64u"
+#define FAudio_PRIx64 "I64x"
 
 extern void FAudio_Log(char const *msg);
 
--- a/libs/faudio/src/FAudio_platform_win32.c
+++ b/libs/faudio/src/FAudio_platform_win32.c
@@ -1096,7 +1096,7 @@ static HRESULT FAudio_WMAMF_ProcessInput
 
 	copy_size = min(buffer->AudioBytes - impl->input_pos, impl->input_size);
 	if (!copy_size) return S_FALSE;
-	LOG_INFO(voice->audio, "pushing %x bytes at %x", copy_size, impl->input_pos);
+	LOG_INFO(voice->audio, "pushing %lx bytes at %x", copy_size, impl->input_pos);
 
 	hr = MFCreateSample(&sample);
 	FAudio_assert(!FAILED(hr) && "Failed to create sample!");
@@ -1124,7 +1124,7 @@ static HRESULT FAudio_WMAMF_ProcessInput
 	if (hr == MF_E_NOTACCEPTING) return S_OK;
 	if (FAILED(hr))
 	{
-		LOG_ERROR(voice->audio, "IMFTransform_ProcessInput returned %#x", hr);
+		LOG_ERROR(voice->audio, "IMFTransform_ProcessInput returned %#lx", hr);
 		return hr;
 	}
 
@@ -1151,7 +1151,7 @@ static HRESULT FAudio_WMAMF_ProcessOutpu
 		if (hr == MF_E_TRANSFORM_NEED_MORE_INPUT) return S_FALSE;
 		if (FAILED(hr))
 		{
-			LOG_ERROR(voice->audio, "IMFTransform_ProcessInput returned %#x", hr);
+			LOG_ERROR(voice->audio, "IMFTransform_ProcessInput returned %#lx", hr);
 			return hr;
 		}
 
@@ -1183,7 +1183,7 @@ static HRESULT FAudio_WMAMF_ProcessOutpu
 		}
 		FAudio_memcpy(impl->output_buf + impl->output_pos, copy_buf, copy_size);
 		impl->output_pos += copy_size;
-		LOG_INFO(voice->audio, "pulled %x bytes at %x", copy_size, impl->output_pos);
+		LOG_INFO(voice->audio, "pulled %lx bytes at %x", copy_size, impl->output_pos);
 		hr = IMFMediaBuffer_Unlock(media_buffer);
 		FAudio_assert(!FAILED(hr) && "Failed to unlock buffer bytes!");
 
--- a/libs/tiff/libtiff/tif_config.h
+++ b/libs/tiff/libtiff/tif_config.h
@@ -161,3 +161,8 @@
 #  define TIFF_SIZE_FORMAT "Iu"
 #  define TIFF_SSIZE_FORMAT "Id"
 #endif
+
+#undef PRIu64
+#undef PRId64
+#define PRIu64 "I64u"
+#define PRId64 "I64d"

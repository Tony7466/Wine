#!/bin/sh
set -e
if [ "$#" -lt "1" ]
then
  echo "Usage: $0 <file name>"
  exit 1
fi

# check that the upstream file exists
filename="$1"
test ! -e "$filename" && echo "$filename not found" && exit 1 || true

# figure out which branch we're on
upstream_version=$(echo "$filename" | cut -d- -f2 | sed s/\.tar\.bz2//)
case "$upstream_version" in
  1.0.*|1.2|1.2.*|1.4|1.4.*)
    package=wine
    ;;
  1.1.*|1.3.*|1.5.*)
    package=wine-unstable
    ;;
  *)
    echo "Unknown version series: $upstream_version"
    exit 1
    ;;
esac

# if we're not building from a git tree, use regular uupdate
if [ ! -d ".git" ]
then
  exec uupdate --no-symlink "$*"
fi

# provide orig symlink
debfilename="$(dirname "$filename")/${package}_${upstream_version}.orig.tar.bz2"
test -e $debfilename || ln -s $(basename "$filename") $debfilename

# pull from upstream git repository (favoring "their" changes in the merge)
upstream_tag="wine-$upstream_version"
winehq="git://source.winehq.org/git/wine.git"
git checkout upstream
git pull --no-edit $winehq tag "$upstream_tag" 

# load original .tar.bz2 and .tar.gz into pristine-tar
pristine-tar -v commit "$filename" "$upstream_tag"

# merge from upstream into master branch
git checkout master
git merge upstream

# amend the merge commit message
$0-done --upstream-version "$upstream_version"

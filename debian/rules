#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.
export SHELL=bash

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
CFLAGS=-O0 -g
else
CFLAGS=-O2 -g
endif
LDFLAGS=

CONFIGOPTS = --with-x --enable-opengl

DEB_HOST_GNU_SYSTEM	?= $(shell dpkg-architecture -qDEB_HOST_GNU_SYSTEM)
DEB_HOST_GNU_CPU	?= $(shell dpkg-architecture -qDEB_HOST_GNU_CPU)

DEBIAN_VERSION := $(shell cat /etc/debian_version)
VERSION := $(lastword $(shell dpkg-parsechangelog|grep "^Version: "))

#DEBIAN_SID := $(findstring sid,$(DEBIAN_VERSION))

#ifeq (,$(findstring etch,$(DEBIAN_VERSION)))
## delete amd64.tar.lzma.uu if we're not on etch.
#AMD64_PACK = false
#endif

# On i386, pack binaries into amd64.tar.lzma.uu and embed it into
# source package, because debian's amd64 port has pretty crappy
# support for building 32-bit binaries natively.

ifeq ($(DEB_HOST_GNU_CPU)-$(DEB_HOST_GNU_SYSTEM),i486-linux-gnu)
AMD64_PACK ?= true
endif

# On amd64, build 32-bit package by simply unpacking amd64.tar.lzma.uu
# if it exists, otherwise build from source using 32-bit compiler.

ifeq ($(DEB_HOST_GNU_CPU),x86_64)
ifeq ($(DEB_HOST_GNU_SYSTEM),linux-gnu)
ifneq (,$(wildcard debian/amd64.tar.lzma.uu))
AMD64_COPY = true
endif
endif
ifeq (,$(AMD64_COPY))
BUILDS = build32
else
BUILDS =
endif
# Not ready yet: build Win64 version
#BUILDS += build64
#NATIVE_BUILD = build64
NATIVE_BUILD = build32
IA32_LIBS = /emul/ia32-linux
LDFLAGS += -L$(CURDIR)/lib32
else
BUILDS = build32
NATIVE_BUILD = build32
endif

configure-ia32: configure-ia32-stamp
configure-ia32-stamp:
	dh_testdir
ifneq (,$(IA32_LIBS))
	mkdir lib32 || true
	bash debian/ia32.sh $(IA32_LIBS) lib32
endif
	touch configure-ia32-stamp

configure-arch32: configure-arch32-stamp
configure-arch32-stamp: configure-ia32-stamp
	dh_testdir
ifeq (,$(DEB_SAVEBUILD))
	mkdir build32 || true
	cd build32 && \
	CFLAGS="$(CFLAGS)" \
	LDFLAGS="$(LDFLAGS)" \
	../configure --disable-win64 $(CONFIGOPTS) \
	--prefix=/usr \
	--sysconfdir=/etc \
	--bindir=\$${prefix}/bin \
	--libdir=\$${prefix}/lib \
	--mandir=\$${prefix}/share/man \
	--infodir=\$${prefix}/share/info
else
	mv /tmp/build32 .
endif

	touch configure-arch32-stamp

configure-arch64: configure-arch64-stamp
configure-arch64-stamp: configure-ia32-stamp
	dh_testdir
ifeq (,$(DEB_SAVEBUILD))
	mkdir build64 || true
	cd build64 && \
	CFLAGS="$(CFLAGS)" \
	LDFLAGS="$(LDFLAGS)" \
	../configure --enable-win64 $(CONFIGOPTS) \
	--prefix=/usr \
	--sysconfdir=/etc \
	--bindir=\$${prefix}/bin \
	--libdir=\$${prefix}/lib \
	--mandir=\$${prefix}/share/man \
	--infodir=\$${prefix}/share/info
else
	mv /tmp/build64 .
endif

	touch configure-arch64-stamp

build-indep: build-indep-stamp
build-indep-stamp:
	dh_testdir

	touch build-indep-stamp

build-arch32: build-arch32-stamp
build-arch32-stamp: configure-arch32-stamp
	dh_testdir

ifeq (,$(DEB_SAVEBUILD))
	$(MAKE) -C build32 depend
	# build wine & tools
	$(MAKE) -C build32
	# build winelib programs
	$(MAKE) -C build32/programs
endif

	touch build-arch32-stamp

build-arch64: build-arch64-stamp
build-arch64-stamp: configure-arch64-stamp
	dh_testdir

ifeq (,$(DEB_SAVEBUILD))
	$(MAKE) -C build64 depend
	# build wine & tools
	$(MAKE) -C build64
	# build winelib programs
	$(MAKE) -C build64/programs
endif

	touch build-arch64-stamp

build-arch: $(patsubst build%,build-arch%,$(BUILDS))
build: build-indep build-arch

clean-arch32:
	dh_testdir
	dh_testroot
	rm -f install-arch32-stamp build-arch32-stamp configure-arch32-stamp
#	-$(MAKE) -C build32 distclean
ifeq (,$(DEB_SAVEBUILD))
	rm -rf build32
else
	mv build32 /tmp || true
endif

clean-arch64:
	dh_testdir
	dh_testroot
	rm -f install-arch64-stamp build-arch64-stamp configure-arch64-stamp
#	-$(MAKE) -C build64 distclean
ifeq (,$(DEB_SAVEBUILD))
	rm -rf build64
else
	mv build64 /tmp || true
endif

clean: clean-arch32 clean-arch64
	dh_testdir
	dh_testroot
	rm -f install-arch-stamp build-indep-stamp configure-ia32-stamp
ifeq (false,$(AMD64_PACK))
	rm -f debian/amd64.tar.lzma.uu
endif
	rm -rf lib32
	dh_clean

install-indep: build-indep
	dh_testdir
	dh_testroot
	dh_installdirs -i

install-arch32: install-arch32-stamp
install-arch32-stamp: build-arch32-stamp
	dh_testdir
	dh_testroot

	# install wine, libwine, fonts, and tools
	$(MAKE) -C build32 install prefix=`pwd`/debian/tmp/usr libdir=`pwd`/debian/tmp/usr/lib
	# move the real binaries into /usr/lib/wine
	mv debian/tmp/usr/bin/wine debian/tmp/usr/lib/wine/wine.bin
	mv debian/tmp/usr/bin/wine-kthread debian/tmp/usr/lib/wine/wine-kthread
	mv debian/tmp/usr/bin/wine-pthread debian/tmp/usr/lib/wine/wine-pthread
	mv debian/tmp/usr/bin/wine-preloader debian/tmp/usr/lib/wine/wine-preloader
	mv debian/tmp/usr/bin/wineserver debian/tmp/usr/lib/wine/wineserver
	# install manpages
	$(MAKE) -C build32/documentation install prefix=`pwd`/debian/tmp/usr
	mv debian/tmp/usr/share/man/man3w debian/tmp/usr/share/man/man3
	# install winelib programs
	$(MAKE) -C build32/programs install prefix=`pwd`/debian/tmp/usr
	install build32/tools/fnt2bdf debian/tmp/usr/bin
	rm -f debian/tmp/usr/bin/winelauncher

	touch install-arch32-stamp

# I still have to work out how to install 32-bit and 64-bit Wine side by side.
# This version only works if the 32-bit version isn't installed...
install-arch64: install-arch64-stamp
install-arch64-stamp: build-arch64-stamp
	dh_testdir
	dh_testroot

	# install wine, libwine, fonts, and tools
	$(MAKE) -C build64 install prefix=`pwd`/debian/tmp/usr libdir=`pwd`/debian/tmp/usr/lib
	# move the real binaries into /usr/lib/wine
	mv debian/tmp/usr/bin/wine debian/tmp/usr/lib/wine/wine.bin
	mv debian/tmp/usr/bin/wineserver debian/tmp/usr/lib/wine/wineserver
	# install manpages
	$(MAKE) -C build64/documentation install prefix=`pwd`/debian/tmp/usr
	mv debian/tmp/usr/share/man/man3w debian/tmp/usr/share/man/man3
	# install winelib programs
	$(MAKE) -C build64/programs install prefix=`pwd`/debian/tmp/usr
	install build64/tools/fnt2bdf debian/tmp/usr/bin
	rm -f debian/tmp/usr/bin/winelauncher

	touch install-arch64-stamp

install-arch: install-arch-stamp
install-arch-stamp: $(patsubst build%,install-arch%-stamp,$(BUILDS))
	dh_testdir
	dh_testroot

	mkdir -p debian/tmp/usr/bin
	install -m 755 debian/winelauncher debian/tmp/usr/bin/wine
	# MIME and binfmt databases
	mkdir -p debian/tmp/usr/share/{mime-info,binfmts}
	cp debian/mime-info.mime	debian/tmp/usr/share/mime-info/wine.mime
	cp debian/mime-info.keys	debian/tmp/usr/share/mime-info/wine.keys
	cp debian/wine.binfmt		debian/tmp/usr/share/binfmts/wine
	# other documentation
	mkdir -p debian/tmp/usr/share/doc/wine
	cp dlls/twain_32/README		debian/tmp/usr/share/doc/wine/README.twain
	cp tools/winedump/README	debian/tmp/usr/share/doc/wine/README.winedump
	# tools
	cp tools/font_convert.sh	debian/tmp/usr/bin/wine-font-convert

	touch install-arch-stamp

install: install-arch

# Build architecture-independent files here.
binary-indep: build-indep install-indep
	dh_testdir
	dh_testroot

	dh_installdocs -i
	dh_installchangelogs -i ChangeLog
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: install-arch-stamp
	dh_testdir
	dh_testroot
	# create installation directories
	dh_installdirs -s

ifeq (,$(AMD64_COPY))
	# distribute files into debian/<packagename>
	# according to the <packagename>.install files
	dh_install -s --list-missing

	# patch marlett.ttf due to fontforge bug #458234
	mensis -script debian/marlett.mensis debian/libwine/usr/share/wine/fonts/marlett.ttf
	rm -f debian/libwine/usr/share/wine/fonts/marlett.ttf~

	# split up libwine
ifeq ($(DEB_HOST_GNU_SYSTEM),linux-gnu)
	mv debian/libwine/usr/lib/wine/winealsa* debian/libwine-alsa/usr/lib/wine
	mv debian/libwine/usr/lib/wine/capi*     debian/libwine-capi/usr/lib/wine
endif
	mv debian/libwine/usr/lib/wine/mscms*    debian/libwine-cms/usr/lib/wine
	mv debian/libwine/usr/lib/wine/wineoss*  debian/libwine-oss/usr/lib/wine
	mv debian/libwine/usr/lib/wine/wineesd*  debian/libwine-esd/usr/lib/wine
	mv debian/libwine/usr/lib/wine/d3d8*     debian/libwine-gl/usr/lib/wine
	mv debian/libwine/usr/lib/wine/d3d9*     debian/libwine-gl/usr/lib/wine
	mv debian/libwine/usr/lib/wine/d3d10*    debian/libwine-gl/usr/lib/wine
	mv debian/libwine/usr/lib/wine/d3dim*    debian/libwine-gl/usr/lib/wine
	mv debian/libwine/usr/lib/wine/d3drm*    debian/libwine-gl/usr/lib/wine
	mv debian/libwine/usr/lib/wine/d3dx8*    debian/libwine-gl/usr/lib/wine
	mv debian/libwine/usr/lib/wine/d3dx9*    debian/libwine-gl/usr/lib/wine
	mv debian/libwine/usr/lib/wine/d3dxof*   debian/libwine-gl/usr/lib/wine
	mv debian/libwine/usr/lib/wine/glu32*    debian/libwine-gl/usr/lib/wine
	mv debian/libwine/usr/lib/wine/opengl32* debian/libwine-gl/usr/lib/wine
	mv debian/libwine/usr/lib/wine/winejack* debian/libwine-jack/usr/lib/wine
	mv debian/libwine/usr/lib/wine/wldap32*  debian/libwine-ldap/usr/lib/wine
	mv debian/libwine/usr/lib/wine/winenas*  debian/libwine-nas/usr/lib/wine
	mv debian/libwine/usr/lib/wine/wineps*   debian/libwine-print/usr/lib/wine
endif

	dh_installdocs -s
#	dh_installmenu -s
	dh_installdebconf -s
	dh_installmime -s

	dh_installchangelogs -s ChangeLog
	dh_link -s

	# Wine uses many "interesting" linker options,
	# so objcopy barfs on several Wine binaries.
	# I'll just have to exclude them here, I guess.
	# (They're pretty small ones anyway...)
	dh_strip -s --dbg-package=libwine-dbg \
	 -Xwine-kthread -Xwine-pthread -Xwine-preloader

	# We don't need symbols for the build tools...
	rm -rf debian/libwine-dbg/usr/lib/debug/usr/bin

	# debhelper 6 has dh_lintian, but I don't want to depend on it yet...
	install -m 644 debian/libwine.lintian-overrides debian/libwine/usr/share/lintian/overrides/libwine

	dh_desktop -s

	dh_compress -s
	dh_fixperms -s

ifneq (,$(AMD64_COPY))
	# Using compressed 32-bit build.  Make sure it's the latest one!!
	uudecode < debian/amd64.tar.lzma.uu | lzma -d | tar -xpf -
endif
ifeq (true,$(AMD64_PACK))
	# Generating compressed 32-bit build.  Make sure to keep your *_i386.deb in sync with this file in your *.diff.gz!!
	tar -cpf - `grep-dctrl -v "Architecture: all" debian/control | grep "^Package: " | sed -e "s,^Package: ,debian/,g"` \
		| lzma -c9 | uuencode - > debian/amd64.tar.lzma.uu
ifneq (,$(DEB_FIXDIFF))
	# okay, try to change the .diff.gz
	bash debian/diff-amd64.sh
endif
endif

	# tight libwine dependencies for packages built here
	dh_makeshlibs -plibwine -n -V "libwine (= $(VERSION))"

	bash debian/gendeps.sh $(patsubst build%,%,$(BUILDS))
	dh_shlibdeps -s -Llibwine -ldebian/libwine/usr/lib
	bash debian/cleandeps.sh

	# relaxed libwine dependencies for everyone else
	dh_makeshlibs -s

	dh_installdeb -s

	dh_gencontrol -s
	dh_md5sums -s
	dh_builddeb -s

binary: binary-arch binary-indep

.PHONY: configure-arch32 configure-arch64 \
	build-indep build-arch32 build-arch64 build-arch build \
	clean-arch32 clean-arch64 clean \
	install-indep install-arch32 install-arch64 install-arch install \
	binary-indep binary-arch binary
